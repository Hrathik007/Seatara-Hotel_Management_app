{"ast":null,"code":"var _jsxFileName = \"/Users/hemanth/Documents/SitaraHotel/frontend/src/component/common/RoomSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ApiService from '../../service/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomSearch = ({\n  handleSearchResult\n}) => {\n  _s();\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        console.log('Fetched room types (RoomSearch):', types);\n        setRoomTypes(types);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n\n  /**This methods is going to be used to show errors */\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => {\n      setError('');\n    }, timeout);\n  };\n\n  /**THis is going to be used to fetch avaailabe rooms from database base on seach data that'll be passed in */\n  const handleInternalSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return false;\n    }\n    try {\n      // Convert startDate to the desired format\n      const formattedStartDate = startDate ? startDate.toISOString().split('T')[0] : null;\n      const formattedEndDate = endDate ? endDate.toISOString().split('T')[0] : null;\n      // Call the API to fetch available rooms\n      const response = await ApiService.getAvailableRoomsByDateAndType(formattedStartDate, formattedEndDate, roomType);\n\n      // Check if the response is successful\n      if (response.statusCode === 200) {\n        if (response.roomList.length === 0) {\n          showError('Room not currently available for this date range on the selected rom type.');\n          return;\n        }\n        handleSearchResult(response.roomList);\n        setError('');\n      }\n    } catch (error) {\n      showError(\"Unown error occured: \" + error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Check-in Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date),\n          dateFormat: \"dd/MM/yyyy\",\n          placeholderText: \"Select Check-in Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Check-out Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: date => setEndDate(date),\n          dateFormat: \"dd/MM/yyyy\",\n          placeholderText: \"Select Check-out Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Room Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: roomType,\n          onChange: e => setRoomType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            value: \"\",\n            children: \"Select Room Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), console.log('Dropdown value (RoomSearch):', roomType), roomTypes.map(roomType => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: roomType,\n            children: roomType\n          }, roomType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"home-search-button\",\n        onClick: handleInternalSearch,\n        children: \"Search Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSearch, \"gV1/IZHf5eN7qZ02IA9Kw0WKb/w=\");\n_c = RoomSearch;\nexport default RoomSearch;\nvar _c;\n$RefreshReg$(_c, \"RoomSearch\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","ApiService","jsxDEV","_jsxDEV","RoomSearch","handleSearchResult","_s","startDate","setStartDate","endDate","setEndDate","roomType","setRoomType","roomTypes","setRoomTypes","error","setError","fetchRoomTypes","types","getRoomTypes","console","log","message","showError","timeout","setTimeout","handleInternalSearch","formattedStartDate","toISOString","split","formattedEndDate","response","getAvailableRoomsByDateAndType","statusCode","roomList","length","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","date","dateFormat","placeholderText","value","e","target","disabled","map","onClick","_c","$RefreshReg$"],"sources":["/Users/hemanth/Documents/SitaraHotel/frontend/src/component/common/RoomSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ApiService from '../../service/ApiService';\n\nconst RoomSearch = ({ handleSearchResult }) => {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        console.log('Fetched room types (RoomSearch):', types);\n        setRoomTypes(types);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n\n  /**This methods is going to be used to show errors */\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => {\n      setError('');\n    }, timeout);\n  };\n\n  /**THis is going to be used to fetch avaailabe rooms from database base on seach data that'll be passed in */\n  const handleInternalSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return false;\n    }\n    try {\n      // Convert startDate to the desired format\n      const formattedStartDate = startDate ? startDate.toISOString().split('T')[0] : null;\n      const formattedEndDate = endDate ? endDate.toISOString().split('T')[0] : null;\n      // Call the API to fetch available rooms\n      const response = await ApiService.getAvailableRoomsByDateAndType(formattedStartDate, formattedEndDate, roomType);\n\n      // Check if the response is successful\n      if (response.statusCode === 200) {\n        if (response.roomList.length === 0) {\n          showError('Room not currently available for this date range on the selected rom type.');\n          return\n        }\n        handleSearchResult(response.roomList);\n        setError('');\n      }\n    } catch (error) {\n      showError(\"Unown error occured: \" + error.response.data.message);\n    }\n  };\n\n  return (\n    <section>\n      <div className=\"search-container\">\n        <div className=\"search-field\">\n          <label>Check-in Date</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Select Check-in Date\"\n          />\n        </div>\n        <div className=\"search-field\">\n          <label>Check-out Date</label>\n          <DatePicker\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Select Check-out Date\"\n          />\n        </div>\n\n        <div className=\"search-field\">\n          <label>Room Type</label>\n          <select value={roomType} onChange={(e) => setRoomType(e.target.value)}>\n            <option disabled value=\"\">\n              Select Room Type\n            </option>\n            {console.log('Dropdown value (RoomSearch):', roomType)}\n            {roomTypes.map((roomType) => (\n              <option key={roomType} value={roomType}>\n                {roomType}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"home-search-button\" onClick={handleInternalSearch}>\n          Search Rooms\n        </button>\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n    </section>\n  );\n};\n\nexport default RoomSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}